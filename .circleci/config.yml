version: 2
jobs:
  deploy_fantasy_ui_:
    docker:
      - image: circleci/python:3.6.6-jessie-browsers
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build web-ui docker image
          command: |
            cd web-ui            
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker build -t pampoomio/fantasy-web-ui:latest .            
            docker push pampoomio/fantasy-web-ui:latest

  build_web-services:
    working_directory: ~/grad-bank-app/web-services
    docker: # use the docker executor type; machine and macos executors are also supported
      - image: circleci/openjdk:11-jdk-node-browsers # the primary container, where your job's commands are run
      - image: circleci/mariadb:10.3.10-bionic
        environment:
          MYSQL_DATABASE: gradapp
          MYSQL_USER: gradapp
          MYSQL_PASSWORD: passwd
    steps:
      # Checkout git project
      - checkout:
          path: ~/grad-bank-app
        # Clean
      - run:
          name: Gradle clean
          command: gradle clean
      ### Build
      - run:
          name: Gradle build
          command: gradle build
      - run:
          name: Build Jar
          command: gradle bootJar
      - persist_to_workspace:
          root: ~/grad-bank-app/web-services
          paths:
            - Dockerfile
            - build/libs
            - build/resources
      ### Prepare to run jar
      - run:
          name: Prepare to run Jar
          working_directory: ~/grad-bank-app/web-services/build/libs
          command: |
            cp ~/grad-bank-app/web-services/src/main/resources/application.properties ./
            sed -i '/server.ssl.key-store:/c\server.ssl.key-store: ssl.jks' application.properties
            sed -i '/server.ssl.keyAlias:/c\server.ssl.keyAlias: gradApp' application.properties
            sed -i '/server.ssl.key-store-password:/c\server.ssl.key-store-password: tempCert' application.properties
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Run Jar for testing
          working_directory: ~/grad-bank-app/web-services/build/libs
          command: java -jar *.jar
          background: true
      ### Gradle clean, Run Unit tests, and check Code Coverage
      - run:
          name: Gradle test
          command: gradle check
        # Store Unit test results
      - store_artifacts:
          path: build/reports
          destination: reports
      - store_test_results:
          path: build/test-results
      - run:
          name: Kill Server
          command: killall java
          when: always

  deploy_web-services:
    working_directory: ~/web-services
    docker:
      - image: circleci/python:3.6.6-jessie-browsers
    environment:
      APPLICATION_NAME: gradbankapp-api-repository
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/web-services
      - run:
          name: Install the AWS CLI
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install awscli
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          working_directory: ~/web-services
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker build -t pampoomio/fantasy-back-end-server:latest .            
            docker push pampoomio/fantasy-back-end-server:latest

  build_web-ui:
    working_directory: ~/grad-bank-app/web-ui
    docker: # use the docker executor type; machine and macos executors are also supported
      - image: circleci/node:10.11.0-browsers # the primary container, where your job's commands are run
      - image: circleci/python:3.6.6-jessie-node-browsers # the primary container, where your job's commands are run
    steps:
      - checkout:
          path: ~/grad-bank-app
      ### Jest testing
      - restore_cache:
          key: node_modules-{{ checksum "~/grad-bank-app/web-ui/package-lock.json" }}
      - run:
          name: Prepare npm modules
          command: npm ci
      - run:
          name: Compile SCSS files to CSS
          command: npm run-script build-css
      - run:
          name: Make a build
          command: npm run-script build
      - save_cache:
          key: node_modules-{{ checksum "~/grad-bank-app/web-ui/package-lock.json" }}
          paths:
            - ~/grad-bank-app/web-ui/node_modules
      - persist_to_workspace:
          root: ~/grad-bank-app/web-ui
          paths:
            - ./.dockerignore
            - ./Dockerfile
            - ./build
            - ./server
      - run:
          name: Run ESlint checks
          command: npm run lint-report
      - run:
          name: "JavaScript Test Suite"
          command: npm run test:all -- --ci --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: "reports/js-test-results.xml"
      - store_artifacts:
          path: reports
          destination: reports
      - store_test_results:
          path: reports

workflows:
  version: 2
  build:
    jobs:
      - build_web-services
      - build_web-ui
      - deploy_web-services:
          requires:
            - build_web-services
      - deploy_fantasy_ui:
          requires:
            - build_web-ui
