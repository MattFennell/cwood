version: "2"

services:
  traefik:
    image: traefik:1.5.4
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/acme.json:/acme.json
    container_name: traefik
  ui:
    container_name: fantasy-ui
    image: pampoomio/fantasy-ui:latest
    ports:
      - "5000:5000"
    environment:
      PROXY: http://server:8080
    depends_on:
      - db
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:ccafcfantasy.com"
      - "traefik.basic.port=5000"
      - "traefik.basic.protocol=http"
  db:
    container_name: database
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${SQL_PASSWORD}"
      MYSQL_USER: "${SQL_USERNAME}"
      MYSQL_PASSWORD: "${SQL_PASSWORD}"
      MYSQL_DATABASE: "${SQL_DATABASE}"
    ports:
      - 3307:3306
    volumes:
      - db-data:/var/lib/mysql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.7
    ports:
      - 8081:80
  server:
    container_name: fantasy-server
    image: pampoomio/fantasy-server:latest
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mariadb://database:3306/${SQL_DATABASE}"
      SPRING_DATASOURCE_PASSWORD: "${SQL_PASSWORD}"
      SPRING_DATASOURCE_USERNAME: "${SQL_USERNAME}"
      SERVER_TOMCAT_MAXTHREADS: 5
  watchtower:
   image: containrrr/watchtower
   volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - ~/.docker/config.json:/config.json
   command: --interval 30
volumes:
  db-data:

#https://download.docker.com/linux/debian/dists/ - for GCP
#http://35.246.91.112:8080/swagger-ui.html#/
# mysql -u fantasy -ppassword
# USE fantasy
# SELECT * from application_user;
# sudo apt-get update
# sudo apt-get install libltdl7
# wget https://download.docker.com/linux/debian/dists/stretch/pool/stable/amd64/docker-ce_18.06.1~ce~3-0~debian_amd64.deb
# sudo dpkg -i docker-ce_18.06.1~ce~3-0~debian_amd64.deb

# wget https://download.docker.com/linux/debian/dists/stretch/pool/stable/amd64/containerd.io_1.2.2-1_amd64.deb
# sudo dpkg -i containerd.io_1.2.2-1_amd64.deb

# sudo usermod -aG docker mfennell (replace with username on ssh screen (need to restart ssh because of this))
# sudo apt-get install docker -y
# sudo apt-get install docker-compose -y

# vim docker-compose.yml -> : set paste -> ctrl-v the .yml file in (check version at top - should be 2)

# restart the ssh session
# running 'top' shows CPU usage
# docker ps - should show no containers running (and work)
# docker-compose up should load everything

# create a firewall rule ->
# target = All instances in the network
# ip range = 0.0.0.0/0
# allow all ports

# https://certbot.eff.org/lets-encrypt/debianstretch-other
# http://man7.org/linux/man-pages/man5/crontab.5.html

# run 'docker-compose stop' to bring the site down
# then run 'docker ps --filter "status=exited"' to get the stopped containers
# get the id for fantasy-ui and fantasy-server and run 'docker rm CONTAINER_ID'
# then run 'docker images' to get all of the images
# then for fantasy-ui and fantasy-server,  copy the image ID and run 'docker rmi IMAGE_ID' for both
# running 'docker-compose up' should bring the site up with new images, whilst maintaining the database

# delete all images - docker rmi $(docker images -q)

# need to mkdir traefik, copy the traefik config in, and make an empty acme.json file in it (touch acme.json)
# also need to have a file in /.docker called config.json, which is a file containing just {}
